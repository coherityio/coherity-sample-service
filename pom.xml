<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.coherity.shared.parent.spring</groupId>
        <artifactId>parent-pom-spring</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <groupId>io.coherity.sample</groupId>
    <artifactId>coherity-sample-service</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    
    <name>Coherity Sample Service</name>
    <description>Sample REST service using Coherity Spring Boot parent POM</description>

	<properties>
		<project.repo.url>https://maven.pkg.github.com/coherityio/coherity-sample-service</project.repo.url>
	</properties>

	<distributionManagement>
		<repository>
			<id>coherity-sample-service-repo</id>
			<name>Coherity Sample Service Repo</name>
			<url>https://maven.pkg.github.com/coherityio/coherity-sample-service</url>
		</repository>
		<snapshotRepository>
			<id>coherity-sample-service-repo</id>
			<name>Coherity Sample Service Snapshots Repo</name>
			<url>https://maven.pkg.github.com/coherityio/coherity-sample-service</url>
		</snapshotRepository>
	</distributionManagement>

    <dependencies>
        <!-- Spring Boot Starters -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        
        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        
        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>
            <!-- Application-specific plugins -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly/distribution.xml</descriptor>
                    </descriptors>
                    <finalName>${project.artifactId}-${project.version}</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Echo Docker build command during package phase -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>echo-docker-command</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message=""/>
                                <echo message="=== Docker Build Command ==="/>
                                <echo message="To build Docker image, run:"/>
                                <echo message=""/>
                                <echo message="docker build   --build-arg ARTIFACT_ID=${project.artifactId} --build-arg VERSION=${project.version}  -t coherityio/${project.artifactId}:${project.version} -t coherityio/${project.artifactId}:${project.version} . "/>
                                <echo message=""/>
                                <echo message="  --build-arg ARTIFACT_ID=${project.artifactId} \"/>
                                <echo message="  --build-arg VERSION=${project.version} \"/>
                                <echo message="  -t coherityio/${project.artifactId}:${project.version} \"/>
                                <!-- echo message="  -t coherityio/${project.artifactId}:latest \"/ -->
                                <echo message="  ."/>
                                <echo message=""/>
                                <echo message="Or use Maven: mvn docker:build"/>
                                <echo message="============================="/>
                                <echo message=""/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Fabric8 Docker Maven Plugin for Docker image building -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.43.4</version>
                <configuration>
                    <images>
                        <image>
                            <name>coherityio/${project.artifactId}:${project.version}</name>
                            <build>
                                <dockerFile>Dockerfile</dockerFile>
                                <contextDir>${project.basedir}</contextDir>
                                <args>
                                    <ARTIFACT_ID>${project.artifactId}</ARTIFACT_ID>
                                    <VERSION>${project.version}</VERSION>
                                </args>
                            </build>
                        </image>
                    </images>
                </configuration>
                <!-- NO executions block = no automatic execution -->
            </plugin>
        </plugins>
    </build>

</project>